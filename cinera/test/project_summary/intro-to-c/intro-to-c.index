---
location: "day1"
number: "1"
title: "Intro to C on Windows - Day 1"
markers:
"0.000": "Introduction to Magnificence"
"160.000": "Getting a C Compiler on Windows"
"321.000": "How to start a project in Visual Studio"
"495.000": "Structure of a Visual Studio project"
"558.000": "How to start coding in Visual Studio"
"608.000": "Basics of coding in C/C++"
"667.000": "The Visual Studio editor"
"733.000": "Everything about building a program from code"
"1015.000": "Excursion: processor cores"
"1390.000": "Continue the building topic"
"1937.000": "Define the execution start"
"2409.000": "Windows-specific C code"
"2775.000": "Run our first program"
"2835.000": "Add something to do for our program"
"2914.000": "Functions"
"3159.000": "Excursion: comments"
"3224.000": "Continue the functions topic"
"3292.000": "Strings"
"3330.000": "The meaning of semicolons in C"
"3443.000": "Details of WinMain"
"3833.000": "Forward declaration"
"4066.000": "Including files"
---
location: "day4qa"
number: "4qa"
title: "Intro to C on Windows - Day 4 Q&A"
markers:
"20.000": "Q&A"
"22.000": "Do a segmentation error!"
"38.000": "Will you explain how negative numbers are encoded?"
"66.000": "What would be the difference if you used C++ classes instead of structs?"
"136.000": "Does the order of variable declaration affect their memory packing?"
"176.000": "Show a segmentation error"
"186.000": "Why are their 18 columns in the memory window?"
"246.000": "Why use char and short if they get padded to 32 bits like ints anyway?"
"543.000": "In case you weren't aware, the twitch stream doesn't stop when you kill the webcam video"
"561.000": "What is the arrow operator?"
"586.000": "Why didn't big endianness become the thing instead of little endianness? Conversely, if Sony is in a world where little endianness is dominant in x86, why would they make things harder for everyone by choosilocation: "day2"
number: "2"
title: "Intro to C on Windows - Day 2"
markers:
"5.000": "News - You can get Visual Studio Community Edition for free (better than express)"
"155.000": "VS tip - can load the last thing you had open when you start it next time"
"180.000": "Recap on functions"
"240.000": "The story of OutputDebugStringA (it all started with ASCII)"
"413.000": "Encodings: numbers that mean something more"
"491.000": "The Debugger"
"555.000": "Breakpoints"
"638.000": "VS: Finding the debug windows"
"685.000": "The Watch window"
"817.000": "See? Letters are numbers!"
"875.000": "Escape sequences (\n and friends)"
"1060.000": "Bases can trip you up"
"1160.000": "Back to escape sequences"
"1253.000": "Note: must type \\ to get real \'s"
"1330.000": "Platform newline niceties"
"1435.000": "What to do if VS crashes (like it just did)"
"1522.000": "Windows vs. Linux vs. Mac OS newlines"
"1619.000": "Back to OutputDebugStringA"
"1695.000": "ASCII to Unicode"
"1818.000": "The consequences of that move: C Error Messages"
"1855.000": "A glimpse into the seedy Macro underbelly of the Win32 API"
"1970.000": "Note: Unicode is default in VS"
"2044.000": "Let's talk about variables"
"2111.000": "Which means we should talk about CPUs and memory"
"2172.000": "Asking for memory (declaring vars)"
"2235.000": "Neat learning anecdote (what does = mean?)"
"2410.000": "What is a variable *really*? (Let's 'watch' it)"
"2480.000": "Uninitialized memory can be anything"
"2595.000": "Debug 'Stepping' (running a program line by line)"
"2663.000": "Programming doesn't have to be math-y (int x = 5; covers a lot)"
"2725.000": "Different types of numbers in C (char, short, int, signed-ness)"
"2784.000": "A bit of binary o.o"
"2970.000": "char == 8 bits"
"2977.000": "How can you tell how much you can hold with 8 bits?"
"3137.000": "Signed-ness"
"3246.000": "The rest of the int family (short, int)"
"3356.000": "VS tip: F5 to start debug, Shift-F5 to stop"
"3374.000": "Math consequences of number size limits (overflows)"
"3542.000": "Okay. What is *actually* happening when we run programs?"
"3577.000": "Assembly"
"3675.000": "The registers window"
"3720.000": "What registers are"
"3812.000": "Memory addresses"
"3896.000": "The MOV instruction"
"3968.000": "Hex"
"4048.000": "VS Tip: hover over hex in assembly to see its decimal value"
"4149.000": "Watching the assembly work in the watch window"
"4258.000": "The size of eax vs. the size of a char"
"4449.000": "The moral: The Asm matches the C. You can read this"
"4523.000": "The moral: How things really work is worth knowing"
---
location: "day2qa"
number: "2qa"
title: "Intro to C on Windows - Day 2 Q&A"
markers:
"51.000": "Positivity!"
"90.000": "If windows wants \r\n, why does printf("hello\n") work fine?"
"186.000": "printf internals"
"298.000": "watching printf work"
"448.000": "short answer: C tries to help with platform independence"
"536.000": "consequence of this: binary vs text mode in fopen"
"687.000": "Do you have to use utf-16 on windows?"
"720.000": "short answer: you have to speak utf-16 when talking to windows"
"733.000": "why .cpp files if you write in pure C?"
"806.000": "char unsigned vs. unsigned char"
"930.000": "note: there are tooltips in these videos not captured by OBS"
"959.000": "Are you going to talk about what optimizations do to your asm?"
"1007.000": "Good resources for learning about asm? (A: Not really)"
"1123.000": "Do you mean it when you say from scratch?"
"1230.000": "Why do you need windows.h?"
"1300.000": "Thoughts/Rant on C++ STL?"
"1410.000": "Thoughts on the subjectivism and the awesomeness of diversity"
"1573.000": "Gfx all by ourselves?"
"1620.000": "What type of game? (Secret for now other than action/adv)"
"1640.000": "Is saturated addition like clamp?"
"1692.000": "Scripting lang? (no)"
"1752.000": "Netcode? (no)"
"1785.000": "Deeper. Not wider"
"1844.000": "How much asm will we be writing?"
"1860.000": "How are you getting game assets?"
"1905.000": "Can you talk about the game?"
"1920.000": "Book to recommend? (no)"
"1940.000": "GPU? (not at first)"
"2009.000": "Hard to know what's going on in GPUs. Lots of trade secrets"
"2044.000": "Why VS and not gcc?"
"2113.000": "Points out links to archive (meta)"
"2175.000": "You going to be the game designer? (yep)"
"2283.000": "Thoughts on Snipers/Defenestration"
"2324.000": "Are we faster than OpenGL? (no)"
"2360.000": "How complex will the game be? (quite)"
"2415.000": "Game plan: force teachable moments by adding a lot of stuff"
"2446.000": "Release date? (long time from now)"
"2496.000": "Thoughts on C Runtime Lib"
"2585.000": "Awesome C metaprogramming tricks? (probably not)"
"2590.000": "What should I say to friends who don't like your ideas?"
"2630.000": "Arguing hurts you. Make your life better and don't"
"2695.000": "How complex will the math be? (not that, pre-college)"
"2744.000": "Can I skip a few weeks if I know programming?"
"2798.000": "Can this run on not-windows? [n.b. check 'coding resources' in above menu]"
---
ng big endianness for the PS3?"
"1070.000": "Aren't the sizes of short, int, and long determined by the CPU and memory architecture rather than always being 16-bits 32-bits, etc?"
"1105.000": "After the pragma on the struct you could rearrange declarations so it's 11 bytes but on 3 of the 4 32-bit boundaries..."
"1129.000": "How do you feel about functional programming?"
"1136.000": "Is there a difference between combining multiple statements into a single line in the resulting code or is it just to save on typing?"
"1180.000": "Is there a particular reason you cast the projectile pointer to a char pointer instead of an int?"
"1263.000": "I don't know about the packing. I'm pretty sure it just puts the variable at an address in memory that is a multiple of that variables size"
"1293.000": "Will Q&A continue when you start the main series?"
"1298.000": "I'm new here. What is the goal of your stream and are you streaming stuff like this again?"
"1316.000": "If pointers are always point to one byte, why are there ever any types besides unsigned char?"
"1361.000": "Couldn't it [the platform decision] also be to make emulation harder?"
"1370.000": "Yesterday you said why you plan to use visual studio as only a debugger, but you wouldn't be using the editor. What will you be using to edit code/compile if not using visual studio?"
"1426.000": "What are these dword, word, and qword things in the win32api? I know they're typedefs so I'm asking why they exist."
"1490.000": "Not really directly related to the content of the stream, but do you think c++ has beaten c as the standard for game programming?"
"1536.000": "How do you psychologically deal with not having visceral results for something you've been programming for a long time?"
"1576.000": "You should really put a link to the handmade hero website in the twitch pages description."
"1601.000": "What do you think about rust for game development? Have you tried it out yet?"
"1622.000": "Not sure you covered pointer dereference, but that would solve some arrow operator questions people were asking"
"1680.000": "In the past video you seem to dislike microsoft substantially. What do you think of many of their new open-source free initiatives announced recently?"
"1880.000": "Thank you and closing thoughts"
---
name: "day1"
title: "Intro to C on Windows - Day 1"
markers:
"0": "Introduction to Magnificence"
"160": "Getting a C Compiler on Windows"
"321": "How to start a project in Visual Studio"
"495": "Structure of a Visual Studio project"
"558": "How to start coding in Visual Studio"
"608": "Basics of coding in C/C++"
"667": "The Visual Studio editor"
"733": "Everything about building a program from code"
"1015": "Excursion: processor cores"
"1390": "Continue the building topic"
"1937": "Define the execution start"
"2409": "Windows-specific C code"
"2775": "Run our first program"
"2835": "Add something to do for our program"
"2914": "Functions"
"3159": "Excursion: comments"
"3224": "Continue the functions topic"
"3292": "Strings"
"3330": "The meaning of semicolons in C"
"3443": "Details of WinMain"
"3833": "Forward declaration"
"4066": "Including files"
---
name: "day1qa"
title: "Intro to C on Windows - Day 1 Q&A"
markers:
"27": "How many videos do you think you'll do before you actually start coding the game?"
"95": "What libraries do you plan to use in the game development?"
"108": "What about Emacs + MinGW?"
"136": "What's the 'A' in OutputDebugString?"
"414": "How often will you do these videos?"
"441": "Will you use OpenGL or DirectX for the game?"
"508": "Is this the same Visual Studio setup you use for The Witness?"
"548": "Are you going to use Windows?"
"601": "Can you see the debug output in a command prompt?"
"691": "How much Windows-specific stuff will be required for the game?"
"789": "Will you post a list of these videos on a website or blog?"
"932": "Why are you doing this project?"
"1086": "Will you still do the podcasts?"
"1126": "Please make the font larger"
---
name: "day2"
title: "Intro to C on Windows - Day 2"
markers:
"5": "News - You can get Visual Studio Community Edition for free (better than express)"
"155": "VS tip - can load the last thing you had open when you start it next time"
"180": "Recap on functions"
"240": "The story of OutputDebugStringA (it all started with ASCII)"
"413": "Encodings: numbers that mean something more"
"491": "The Debugger"
"555": "Breakpoints"
"638": "VS: Finding the debug windows"
"685": "The Watch window"
"817": "See? Letters are numbers!"
"875": "Escape sequences (\n and friends)"
"1060": "Bases can trip you up"
"1160": "Back to escape sequences"
"1253": "Note: must type \\ to get real \'s"
"1330": "Platform newline niceties"
"1435": "What to do if VS crashes (like it just did)"
"1522": "Windows vs. Linux vs. Mac OS newlines"
"1619": "Back to OutputDebugStringA"
"1695": "ASCII to Unicode"
"1818": "The consequences of that move: C Error Messages"
"1855": "A glimpse into the seedy Macro underbelly of the Win32 API"
"1970": "Note: Unicode is default in VS"
"2044": "Let's talk about variables"
"2111": "Which means we should talk about CPUs and memory"
"2172": "Asking for memory (declaring vars)"
"2235": "Neat learning anecdote (what does = mean?)"
"2410": "What is a variable *really*? (Let's 'watch' it)"
"2480": "Uninitialized memory can be anything"
"2595": "Debug 'Stepping' (running a program line by line)"
"2663": "Programming doesn't have to be math-y (int x = 5; covers a lot)"
"2725": "Different types of numbers in C (char, short, int, signed-ness)"
"2784": "A bit of binary o.o"
"2970": "char == 8 bits"
"2977": "How can you tell how much you can hold with 8 bits?"
"3137": "Signed-ness"
"3246": "The rest of the int family (short, int)"
"3356": "VS tip: F5 to start debug, Shift-F5 to stop"
"3374": "Math consequences of number size limits (overflows)"
"3542": "Okay. What is *actually* happening when we run programs?"
"3577": "Assembly"
"3675": "The registers window"
"3720": "What registers are"
"3812": "Memory addresses"
"3896": "The MOV instruction"
"3968": "Hex"
"4048": "VS Tip: hover over hex in assembly to see its decimal value"
"4149": "Watching the assembly work in the watch window"
"4258": "The size of eax vs. the size of a char"
"4449": "The moral: The Asm matches the C. You can read this"
"4523": "The moral: How things really work is worth knowing"
---
name: "day2qa"
title: "Intro to C on Windows - Day 2 Q&A"
markers:
"51": "Positivity!"
"90": "If windows wants \r\n, why does printf("hello\n") work fine?"
"186": "printf internals"
"298": "watching printf work"
"448": "short answer: C tries to help with platform independence"
"536": "consequence of this: binary vs text mode in fopen"
"687": "Do you have to use utf-16 on windows?"
"720": "short answer: you have to speak utf-16 when talking to windows"
"733": "why .cpp files if you write in pure C?"
"806": "char unsigned vs. unsigned char"
"930": "note: there are tooltips in these videos not captured by OBS"
"959": "Are you going to talk about what optimizations do to your asm?"
"1007": "Good resources for learning about asm? (A: Not really)"
"1123": "Do you mean it when you say from scratch?"
"1230": "Why do you need windows.h?"
"1300": "Thoughts/Rant on C++ STL?"
"1410": "Thoughts on the subjectivism and the awesomeness of diversity"
"1573": "Gfx all by ourselves?"
"1620": "What type of game? (Secret for now other than action/adv)"
"1640": "Is saturated addition like clamp?"
"1692": "Scripting lang? (no)"
"1752": "Netcode? (no)"
"1785": "Deeper. Not wider"
"1844": "How much asm will we be writing?"
"1860": "How are you getting game assets?"
"1905": "Can you talk about the game?"
"1920": "Book to recommend? (no)"
"1940": "GPU? (not at first)"
"2009": "Hard to know what's going on in GPUs. Lots of trade secrets"
"2044": "Why VS and not gcc?"
"2113": "Points out links to archive (meta)"
"2175": "You going to be the game designer? (yep)"
"2283": "Thoughts on Snipers/Defenestration"
"2324": "Are we faster than OpenGL? (no)"
"2360": "How complex will the game be? (quite)"
"2415": "Game plan: force teachable moments by adding a lot of stuff"
"2446": "Release date? (long time from now)"
"2496": "Thoughts on C Runtime Lib"
"2585": "Awesome C metaprogramming tricks? (probably not)"
"2590": "What should I say to friends who don't like your ideas?"
"2630": "Arguing hurts you. Make your life better and don't"
"2695": "How complex will the math be? (not that, pre-college)"
"2744": "Can I skip a few weeks if I know programming?"
"2798": "Can this run on not-windows? [n.b. check 'coding resources' in above menu]"
---
name: "day3"
title: "Intro to C on Windows - Day 3"
markers:
"76": "Today: Memory"
"158": "Programming = Modifying Memory"
"295": "Recap of our program"
"345": "Brief note on the compiler warnings"
"395": "Okay: Where are the bits?"
"485": "Pointers. C lets you talk about memory."
"595": "The syntax of Pointers: * and &"
"721": "Memory addresses, Virtual Memory"
"911": "How Virtual Memory Works"
"1059": "The consequences of Virtual Memory"
"1120": "Looking at pointers in the watch window"
"1264": "The memory window"
"1333": "Changing memory manually via the debugger"
"1414": "C: the power of no protection"
"1463": "A caveat: can't touch memory you don't own yet"
"1527": "Getting close to the metal is awesome"
"1576": "Where did this initial memory come from?"
"1615": "The Stack"
"1691": "Why the stack makes sense (calls and returns)"
"1871": "Let's watch the stack go"
"2012": "Debug mode memory cruft"
"2177": "Memory moving around (Stack randomization / ASLR)"
"2299": "Everything we'll do is about touching memory"
"2318": "Memory control = super powers"
"2344": "Where code is in memory [n.b. watch the q&a to see this work]"
"2517": "Pictures!"
"2567": "Making the trailer"
"2625": "Centimeters matter to CPUs (thanks, speed of light!)"
"3035": "Why it's important to know that"
"3096": "Applying the same idea to PCIe"
"3160": "Latency vs. Throughput/Bandwidth"
"3369": "The Cache"
"3651": "The cache miss, and the horror of... the swap!"
"3787": "One more time, today's moral: everything we do is poking memory"
---
ten c as the standard for game programming?"
"1536": "How do you psychologically deal with not having visceral results for something you've been programming for a long time?"
"1576": "You should really put a link to the handmade hero website in the twitch pages description."
"1601": "What do you think about rust for game development? Have you tried it out yet?"
"1622": "Not sure you covered pointer dereference, but that would solve some arrow operator questions people were asking"
"1680": "In the past video you seem to dislike microsoft substantially. What do you think of many of their new open-source free initiatives announced recently?"
"1880": "Thank you and closing thoughts"
---
name: "day1"
title: "Intro to C on Windows - Day 1"
markers:
"0": "Introduction to Magnificence"
"160": "Getting a C Compiler on Windows"
"321": "How to start a project in Visual Studio"
"495": "Structure of a Visual Studio project"
"558": "How to start coding in Visual Studio"
"608": "Basics of coding in C/C++"
"667": "The Visual Studio editor"
"733": "Everything about building a program from code"
"1015": "Excursion: processor cores"
"1390": "Continue the building topic"
"1937": "Define the execution start"
"2409": "Windows-specific C code"
"2775": "Run our first program"
"2835": "Add something to do for our program"
"2914": "Functions"
"3159": "Excursion: comments"
"3224": "Continue the functions topic"
"3292": "Strings"
"3330": "The meaning of semicolons in C"
"3443": "Details of WinMain"
"3833": "Forward declaration"
"4066": "Including files"
---
name: "day1qa"
title: "Intro to C on Windows - Day 1 Q&A"
markers:
"27": "How many videos do you think you'll do before you actually start coding the game?"
"95": "What libraries do you plan to use in the game development?"
"108": "What about Emacs + MinGW?"
"136": "What's the 'A' in OutputDebugString?"
"414": "How often will you do these videos?"
"441": "Will you use OpenGL or DirectX for the game?"
"508": "Is this the same Visual Studio setup you use for The Witness?"
"548": "Are you going to use Windows?"
"601": "Can you see the debug output in a command prompt?"
"691": "How much Windows-specific stuff will be required for the game?"
"789": "Will you post a list of these videos on a website or blog?"
"932": "Why are you doing this project?"
"1086": "Will you still do the podcasts?"
"1126": "Please make the font larger"
---
name: "day2"
title: "Intro to C on Windows - Day 2"
markers:
"5": "News - You can get Visual Studio Community Edition for free (better than express)"
"155": "VS tip - can load the last thing you had open when you start it next time"
"180": "Recap on functions"
"240": "The story of OutputDebugStringA (it all started with ASCII)"
"413": "Encodings: numbers that mean something more"
"491": "The Debugger"
"555": "Breakpoints"
"638": "VS: Finding the debug windows"
"685": "The Watch window"
"817": "See? Letters are numbers!"
"875": "Escape sequences (\n and friends)"
"1060": "Bases can trip you up"
"1160": "Back to escape sequences"
"1253": "Note: must type \\ to get real \'s"
"1330": "Platform newline niceties"
"1435": "What to do if VS crashes (like it just did)"
"1522": "Windows vs. Linux vs. Mac OS newlines"
"1619": "Back to OutputDebugStringA"
"1695": "ASCII to Unicode"
"1818": "The consequences of that move: C Error Messages"
"1855": "A glimpse into the seedy Macro underbelly of the Win32 API"
"1970": "Note: Unicode is default in VS"
"2044": "Let's talk about variables"
"2111": "Which means we should talk about CPUs and memory"
"2172": "Asking for memory (declaring vars)"
"2235": "Neat learning anecdote (what does = mean?)"
"2410": "What is a variable *really*? (Let's 'watch' it)"
"2480": "Uninitialized memory can be anything"
"2595": "Debug 'Stepping' (running a program line by line)"
"2663": "Programming doesn't have to be math-y (int x = 5; covers a lot)"
"2725": "Different types of numbers in C (char, short, int, signed-ness)"
"2784": "A bit of binary o.o"
"2970": "char == 8 bits"
"2977": "How can you tell how much you can hold with 8 bits?"
"3137": "Signed-ness"
"3246": "The rest of the int family (short, int)"
"3356": "VS tip: F5 to start debug, Shift-F5 to stop"
"3374": "Math consequences of number size limits (overflows)"
"3542": "Okay. What is *actually* happening when we run programs?"
"3577": "Assembly"
"3675": "The registers window"
"3720": "What registers are"
"3812": "Memory addresses"
"3896": "The MOV instruction"
"3968": "Hex"
"4048": "VS Tip: hover over hex in assembly to see its decimal value"
"4149": "Watching the assembly work in the watch window"
"4258": "The size of eax vs. the size of a char"
"4449": "The moral: The Asm matches the C. You can read this"
"4523": "The moral: How things really work is worth knowing"
---
name: "day2qa"
title: "Intro to C on Windows - Day 2 Q&A"
markers:
"51": "Positivity!"
"90": "If windows wants \r\n, why does printf("hello\n") work fine?"
"186": "printf internals"
"298": "watching printf work"
"448": "short answer: C tries to help with platform independence"
"536": "consequence of this: binary vs text mode in fopen"
"687": "Do you have to use utf-16 on windows?"
"720": "short answer: you have to speak utf-16 when talking to windows"
"733": "why .cpp files if you write in pure C?"
"806": "char unsigned vs. unsigned char"
"930": "note: there are tooltips in these videos not captured by OBS"
"959": "Are you going to talk about what optimizations do to your asm?"
"1007": "Good resources for learning about asm? (A: Not really)"
"1123": "Do you mean it when you say from scratch?"
"1230": "Why do you need windows.h?"
"1300": "Thoughts/Rant on C++ STL?"
"1410": "Thoughts on the subjectivism and the awesomeness of diversity"
"1573": "Gfx all by ourselves?"
"1620": "What type of game? (Secret for now other than action/adv)"
"1640": "Is saturated addition like clamp?"
"1692": "Scripting lang? (no)"
"1752": "Netcode? (no)"
"1785": "Deeper. Not wider"
"1844": "How much asm will we be writing?"
"1860": "How are you getting game assets?"
"1905": "Can you talk about the game?"
"1920": "Book to recommend? (no)"
"1940": "GPU? (not at first)"
"2009": "Hard to know what's going on in GPUs. Lots of trade secrets"
"2044": "Why VS and not gcc?"
"2113": "Points out links to archive (meta)"
"2175": "You going to be the game designer? (yep)"
"2283": "Thoughts on Snipers/Defenestration"
"2324": "Are we faster than OpenGL? (no)"
"2360": "How complex will the game be? (quite)"
"2415": "Game plan: force teachable moments by adding a lot of stuff"
"2446": "Release date? (long time from now)"
"2496": "Thoughts on C Runtime Lib"
"2585": "Awesome C metaprogramming tricks? (probably not)"
"2590": "What should I say to friends who don't like your ideas?"
"2630": "Arguing hurts you. Make your life better and don't"
"2695": "How complex will the math be? (not that, pre-college)"
"2744": "Can I skip a few weeks if I know programming?"
"2798": "Can this run on not-windows? [n.b. check 'coding resources' in above menu]"
---
name: "day3"
title: "Intro to C on Windows - Day 3"
markers:
"76": "Today: Memory"
"158": "Programming = Modifying Memory"
"295": "Recap of our program"
"345": "Brief note on the compiler warnings"
"395": "Okay: Where are the bits?"
"485": "Pointers. C lets you talk about memory."
"595": "The syntax of Pointers: * and &"
"721": "Memory addresses, Virtual Memory"
"911": "How Virtual Memory Works"
"1059": "The consequences of Virtual Memory"
"1120": "Looking at pointers in the watch window"
"1264": "The memory window"
"1333": "Changing memory manually via the debugger"
"1414": "C: the power of no protection"
"1463": "A caveat: can't touch memory you don't own yet"
"1527": "Getting close to the metal is awesome"
"1576": "Where did this initial memory come from?"
"1615": "The Stack"
"1691": "Why the stack makes sense (calls and returns)"
"1871": "Let's watch the stack go"
"2012": "Debug mode memory cruft"
"2177": "Memory moving around (Stack randomization / ASLR)"
"2299": "Everything we'll do is about touching memory"
"2318": "Memory control = super powers"
"2344": "Where code is in memory [n.b. watch the q&a to see this work]"
"2517": "Pictures!"
"2567": "Making the trailer"
"2625": "Centimeters matter to CPUs (thanks, speed of light!)"
"3035": "Why it's important to know that"
"3096": "Applying the same idea to PCIe"
"3160": "Latency vs. Throughput/Bandwidth"
"3369": "The Cache"
"3651": "The cache miss, and the horror of... the swap!"
"3787": "One more time, today's moral: everything we do is poking memory"
---
name: "day3qa"
title: "Intro to C on Windows - Day 3 Q&A"
markers:
"20": "They teach nothing of this in many colleges. How do you feel about the new programming workforce?"
"218": "Someone asking Casey to play Density"
"228": "Suggestion on how to evaluate and see results in VS Memory Window"
"316": "Do any schools get this right?"
"363": "What languages do you use for metaprogramming C?"
"369": "Another suggestion regarding use of VS"
"508": "How useful is it to study cache-oblivious data structures?"
"669": "How do you meet experts?"
"854": "Will we see some use of linear algebra?"
"965": "Are we replacing STL with our own structures?"
"973": "Will there be network programming as part of the game?"
"1057": "How do you feel about Rust?"
"1061": "Do you plan on reviving the Molly Rocket forum for this project?"
"1078": "What do you think about programming in C using a CLI-based OS?"
"1125": "Another comment regarding cache-oblivious algorithms/data structures"
"1208": "A comment regarding a Reddit question"
"1225": "Are you uploading your streams to Youtube?"
"1255": "Singing (?)"
"1261": "What's the general plan for drawing graphics to the screen?"
"1280": "Will you be trying to do game design?"
"1300": "Suggestion on what to name Youtube channel"
"1308": "Will you explain the properties of an API design?"
"1311": "Closing remarks"
---
name: "day4"
title: "Intro to C on Windows - Day 4"
markers:
"0": "Intro, welcome, and correction"
"319": "Show code bytes in the debugger"
"388": "Asside on processor architecture philosphies"
"633": "Looking at memory in more detail"
"646": "Casting, endianness, and memory"
"908": "Ascii art of binary"
"1180": "The concept and history of endianness"
"1335": "Why programmers care about endianness"
"1666": "Intro to structs"
"1976": "Compiler struct padding"
"2045": "What sizeof() does"
"2128": "Structure compactness"
"2340": "Understanding the hexadecimal numbering system"
"2651": "How casting works"
"2765": "Static typed languages"
"3105": "Turning off the damned edit and continue! Bad edit and continue"
"3198": "Back to how casting works"
"3260": "Why is garbage memory always 204?"
"3461": "Array basics"
"3553": "CaseyQuick: Inline variable assignment"
"4003": "Array syntax is complete shorthand (demo)"
"4184": "Explanation of array syntax demo"
"4496": "Arrow vs. dot notation"
"4623": "Closing thoughts"
---
name: "day4qa"
title: "Intro to C on Windows - Day 4 Q&A"
markers:
"20": "Q&A"
"22": "Do a segmentation error!"
"38": "Will you explain how negative numbers are encoded?"
"66": "What would be the difference if you used C++ classes instead of structs?"
"136": "Does the order of variable declaration affect their memory packing?"
"176": "Show a segmentation error"
"186": "Why are their 18 columns in the memory window?"
"246": "Why use char and short if they get padded to 32 bits like ints anyway?"
"543": "In case you weren't aware, the twitch stream doesn't stop when you kill the webcam video"
"561": "What is the arrow operator?"
"586": "Why didn't big endianness become the thing instead of little endianness? Conversely, if Sony is in a world where little endianness is dominant in x86, why would they make things harder for everyone by choosing big endianness for the PS3?"
"1070": "Aren't the sizes of short, int, and long determined by the CPU and memory architecture rather than always being 16-bits 32-bits, etc?"
"1105": "After the pragma on the struct you could rearrange declarations so it's 11 bytes but on 3 of the 4 32-bit boundaries..."
"1129": "How do you feel about functional programming?"
"1136": "Is there a difference between combining multiple statements into a single line in the resulting code or is it just to save on typing?"
"1180": "Is there a particular reason you cast the projectile pointer to a char pointer instead of an int?"
"1263": "I don't know about the packing. I'm pretty sure it just puts the variable at an address in memory that is a multiple of that variables size"
"1293": "Will Q&A continue when you start the main series?"
"1298": "I'm new here. What is the goal of your stream and are you streaming stuff like this again?"
"1316": "If pointers are always point to one byte, why are there ever any types besides unsigned char?"
"1361": "Couldn't it [the platform decision] also be to make emulation harder?"
"1370": "Yesterday you said why you plan to use visual studio as only a debugger, but you wouldn't be using the editor. What will you be using to edit code/compile if not using visual studio?"
"1426": "What are these dword, word, and qword things in the win32api? I know they're typedefs so I'm asking why they exist."
"1490": "Not really directly related to the content of the stream, but do you think c++ has beaten c as the standard for game programming?"
"1536": "How do you psychologically deal with not having visceral results for something you've been programming for a long time?"
"1576": "You should really put a link to the handmade hero website in the twitch pages description."
"1601": "What do you think about rust for game development? Have you tried it out yet?"
"1622": "Not sure you covered pointer dereference, but that would solve some arrow operator questions people were asking"
"1680": "In the past video you seem to dislike microsoft substantially. What do you think of many of their new open-source free initiatives announced recently?"
"1880": "Thank you and closing thoughts"
---
name: "day5"
title: "Intro to C on Windows - Day 5"
markers:
"4": "Where does everything live? First: The Code"
"156": "From Code to Executable to Memory"
"564": "Virtual Memory and Paging"
"975": "The Instruction Cache"
"1174": "Where the Stack lives (and what lives in the stack)"
"1436": "Operators (starting with math)"
"1600": "Precedence"
"1771": "Shift operator"
"2135": "Shifting to multiply/divide"
"2295": "Bitwise Operator Intro, Google interlude"
"2534": "Bitwise OR and AND Operators, Bitmasking"
"2800": "Bitwise NOT"
"2881": "Windows Calculator - Programming mode is handy"
"2947": "Bitwise XOR"
"3209": "Logic / Comparison Operators Intro, Truthy values"
"3415": "Comparison Operators"
"3597": "Don't expect truthy values made by '<' and friends to always be 1"
"3662": "Control Flow Intro"
"3715": "If/Else Statements"
"4043": "Logical AND and OR"
"4191": "Advice about one-line if statements"
"4313": "Logical XOR is just !="
"4423": "Loops Intro"
"4465": "while(){}"
"4575": "Breaking out of loops"
"4658": "Loop styles are equivalent, as they're all just made of ifs and gotos"
"4682": "do {} while();"
"4779": "for(){}"
"4990": "Writing a for() in terms of while()"
"5142": "switch(){}"
"5508": "Blocks {}"
"5667": "Block advice - watch the lifespan of pointers to block-local vars"
"5890": "Dereference Operator"
"6011": "Pointers to Pointers"
"6072": "Pointers and the Struct's Arrow Operator"
"6108": "Shadowing variables with new scopes"
---
name: "day5qa"
title: "Intro to C on Windows - Day 5 Q&A"
markers:
"36": "At some point, Casey might do a real multi-week intro to C for non-programmers"
"106": "Have you ever found a use for bitfields?"
"152": ",b lets you see binary in Watch window of Visual Studio [n.b. this is in newest version only]"
"197": "More clarification on Virtual Memory (is page table itself virtual?)"
"326": "Clarification on where the stack lives, and on the CPU's i-cache and d-cache"
"396": "Clarification on undefined behavior (casting structs from day 4 of C stream)"
"471": "Can you make the OS load all of your code into memory at once instead of mapping the file?"
"550": "Is the C Runtime Library different from the C Standard Library?"
"585": "Why do you prefer K&R style brackets? (and other neat bracket style annecdotes)"
"649": "Do different bitwise operators differ in performance? (And other performance musings)"
"858": "How much bit-fiddling do you do on real code?"
"877": "Will you be writing your own allocator?"
"883": "More talk about showing vars in binary in Visual Studio"
"930": "Can you show us how to open a blank window using the WinAPI?"
"944": "What do you think of RAII? (Musings on robustness and error handling)"
"1252": "Do you think a four-year CS degree is a waste of money?"
"1260": "Are you going to use structs instead of classes?"
"1267": "How will you handle polymorphism? (Rant against inheritance, instead promoting mixins)"
"1377": "Will the game be in C++ or C? If the latter, why all the .cpp files?"
"1427": "What are the differences between references (int &v) and pointers (int *v)?"
"1519": "Will the code be backwards compatible with C?"
"1552": "Short Circuiting"
"1name: "day1qa"
title: "Intro to C on Windows - Day 1 Q&A"
markers:
"27": "How many videos do you think you'll do before you actually start coding the game?"
"95": "What libraries do you plan to use in the game development?"
"108": "What about Emacs + MinGW?"
"136": "What's the 'A' in OutputDebugString?"
"414": "How often will you do these videos?"
"441": "Will you use OpenGL or DirectX for the game?"
"508": "Is this the same Visual Studio setup you use for The Witness?"
"548": "Are you going to use Windows?"
"601": "Can you see the debug output in a command prompt?"
"691": "How much Windows-specific stuff will be required for the game?"
"789": "Will you post a list of these videos on a website or blog?"
"932": "Why are you doing this project?"
"1086": "Will you still do the podcasts?"
"1126": "Please make the font larger"
---
name: "day3"
title: "Intro to C on Windows - Day 3"
markers:
"76": "Today: Memory"
"158": "Programming = Modifying Memory"
"295": "Recap of our program"
"345": "Brief note on the compiler warnings"
"395": "Okay: Where are the bits?"
"485": "Pointers. C lets you talk about memory."
"595": "The syntax of Pointers: * and &"
"721": "Memory addresses, Virtual Memory"
"911": "How Virtual Memory Works"
"1059": "The consequences of Virtual Memory"
"1120": "Looking at pointers in the watch window"
"1264": "The memory window"
"1333": "Changing memory manually via the debugger"
"1414": "C: the power of no protection"
"1463": "A caveat: can't touch memory you don't own yet"
"1527": "Getting close to the metal is awesome"
"1576": "Where did this initial memory come from?"
"1615": "The Stack"
"1691": "Why the stack makes sense (calls and returns)"
"1871": "Let's watch the stack go"
"2012": "Debug mode memory cruft"
"2177": "Memory moving around (Stack randomization / ASLR)"
"2299": "Everything we'll do is about touching memory"
"2318": "Memory control = super powers"
"2344": "Where code is in memory [n.b. watch the q&a to see this work]"
"2517": "Pictures!"
"2567": "Making the trailer"
"2625": "Centimeters matter to CPUs (thanks, speed of light!)"
"3035": "Why it's important to know that"
"3096": "Applying the same idea to PCIe"
"3160": "Latency vs. Throughput/Bandwidth"
"3369": "The Cache"
"3651": "The cache miss, and the horror of... the swap!"
"3787": "One more time, today's moral: everything we do is poking memory"
---
name: "day3qa"
title: "Intro to C on Windows - Day 3 Q&A"
markers:
"20": "They teach nothing of this in many colleges. How do you feel about the new programming workforce?"
"218": "Someone asking Casey to play Density"
"228": "Suggestion on how to evaluate and see results in VS Memory Window"
"316": "Do any schools get this right?"
"363": "What languages do you use for metaprogramming C?"
"369": "Another suggestion regarding use of VS"
"508": "How useful is it to study cache-oblivious data structures?"
"669": "How do you meet experts?"
"854": "Will we see some use of linear algebra?"
"965": "Are we replacing STL with our own structures?"
"973": "Will there be network programming as part of the game?"
"1057": "How do you feel about Rust?"
"1061": "Do you plan on reviving the Molly Rocket forum for this project?"
"1078": "What do you think about programming in C using a CLI-based OS?"
"1125": "Another comment regarding cache-oblivious algorithms/data structures"
"1208": "A comment regarding a Reddit question"
"1225": "Are you uploading your streams to Youtube?"
"1255": "Singing (?)"
"1261": "What's the general plan for drawing graphics to the screen?"
"1280": "Will you be trying to do game design?"
"1300": "Suggestion on what to name Youtube channel"
"1308": "Will you explain the properties of an API design?"
"1311": "Closing remarks"
---
name: "day4"
title: "Intro to C on Windows - Day 4"
markers:
"0": "Intro, welcome, and correction"
"319": "Show code bytes in the debugger"
"388": "Asside on processor architecture philosphies"
"633": "Looking at memory in more detail"
"646": "Casting, endianness, and memory"
"908": "Ascii art of binary"
"1180": "The concept and history of endianness"
"1335": "Why programmers care about endianness"
"1666": "Intro to structs"
"1976": "Compiler struct padding"
"2045": "What sizeof() does"
"2128": "Structure compactness"
"2340": "Understanding the hexadecimal numbering system"
"2651": "How casting works"
"2765": "Static typed languages"
"3105": "Turning off the damned edit and continue! Bad edit and continue"
"3198": "Back to how casting works"
"3260": "Why is garbage memory always 204?"
"3461": "Array basics"
"3553": "CaseyQuick: Inline variable assignment"
"4003": "Array syntax is complete shorthand (demo)"
"4184": "Explanation of array syntax demo"
"4496": "Arrow vs. dot notation"
"4623": "Closing thoughts"
---
name: "day4qa"
title: "Intro to C on Windows - Day 4 Q&A"
markers:
"20": "Q&A"
"22": "Do a segmentation error!"
"38": "Will you explain how negative numbers are encoded?"
"66": "What would be the difference if you used C++ classes instead of structs?"
"136": "Does the order of variable declaration affect their memory packing?"
"176": "Show a segmentation error"
"186": "Why are their 18 columns in the memory window?"
"246": "Why use char and short if they get padded to 32 bits like ints anyway?"
"543": "In case you weren't aware, the twitch stream doesn't stop when you kill the webcam video"
"561": "What is the arrow operator?"
"586": "Why didn't big endianness become the thing instead of little endianness? Conversely, if Sony is in a world where little endianness is dominant in x86, why would they make things harder for everyone by choosing big endianness for the PS3?"
"1070": "Aren't the sizes of short, int, and long determined by the CPU and memory architecture rather than always being 16-bits 32-bits, etc?"
"1105": "After the pragma on the struct you could rearrange declarations so it's 11 bytes but on 3 of the 4 32-bit boundaries..."
"1129": "How do you feel about functional programming?"
"1136": "Is there a difference between combining multiple statements into a single line in the resulting code or is it just to save on typing?"
"1180": "Is there a particular reason you cast the projectile pointer to a char pointer instead of an int?"
"1263": "I don't know about the packing. I'm pretty sure it just puts the variable at an address in memory that is a multiple of that variables size"
"1293": "Will Q&A continue when you start the main series?"
"1298": "I'm new here. What is the goal of your stream and are you streaming stuff like this again?"
"1316": "If pointers are always point to one byte, why are there ever any types besides unsigned char?"
"1361": "Couldn't it [the platform decision] also be to make emulation harder?"
"1370": "Yesterday you said why you plan to use visual studio as only a debugger, but you wouldn't be using the editor. What will you be using to edit code/compile if not using visual studio?"
"1426": "What are these dword, word, and qword things in the win32api? I know they're typedefs so I'm asking why they exist."
"1490": "Not really directly related to the content of the stream, but do you think c++ has beaten c as the standard for game programming?"
"1536": "How do you psychologically deal with not having visceral results for something you've been programming for a long time?"
"1576": "You should really put a link to the handmade hero website in the twitch pages description."
"1601": "What do you think about rust for game development? Have you tried it out yet?"
"1622": "Not sure you covered pointer dereference, but that would solve some arrow operator questions people were asking"
"1680": "In the past video you seem to dislike microsoft substantially. What do you think of many of their new open-source free initiatives announced recently?"
"1880": "Thank you and closing thoughts"
---
name: "day5"
title: "Intro to C on Windows - Day 5"
markers:
"4": "Where does everything live? First: The Code"
"156": "From Code to Executable to Memory"
"564": "Virtual Memory and Paging"
"975": "The Instruction Cache"
"1174": "Where the Stack lives (and what lives in the stack)"
"1436": "Operators (starting with math)"
"1600": "Precedence"
"1771": "Shift operator"
"2135": "Shifting to multiply/divide"
"2295": "Bitwise Operator Intro, Google interlude"
"2534": "Bitwise OR and AND Operators, Bitmasking"
"2800": "Bitwise NOT"
"2881": "Windows Calculator - Programming mode is handy"
"2947": "Bitwise XOR"
"3209": "Logic / Comparison Operators Intro, Truthy values"
"3415": "Comparison Operators"
"3597": "Don't expect truthy values made by '<' and friends to always be 1"
"3662": "Control Flow Intro"
"3715": "If/Else Statements"
"4043": "Logical AND and OR"
"4191": "Advice about one-line if statements"
"4313": "Logical XOR is just !="
"4423": "Loops Intro"
"4465": "while(){}"
"4575": "Breaking out of loops"
"4658": "Loop styles are equivalent, as they're all just made of ifs and gotos"
"4682": "do {} while();"
"4779": "for(){}"
"4990": "Writing a for() in terms of while()"
"5142": "switch(){}"
"5508": "Blocks {}"
"5667": "Block advice - watch the lifespan of pointers to block-local vars"
"5890": "Dereference Operator"
"6011": "Pointers to Pointers"
"6072": "Pointers and the Struct's Arrow Operator"
"6108": "Shadowing variables with new scopes"
---
name: "day5qa"
title: "Intro to C on Windows - Day 5 Q&A"
markers:
"36": "At some point, Casey might do a real multi-week intro to C for non-programmers"
"106": "Have you ever found a use for bitfields?"
"152": ",b lets you see binary in Watch window of Visual Studio [n.b. this is in newest version only]"
"197": "More clarification on Virtual Memory (is page table itself virtual?)"
"326": "Clarification on where the stack lives, and on the CPU's i-cache and d-cache"
"396": "Clarification on undefined behavior (casting structs from day 4 of C stream)"
"471": "Can you make the OS load all of your code into memory at once instead of mapping the file?"
"550": "Is the C Runtime Library different from the C Standard Library?"
"585": "Why do you prefer K&R style brackets? (and other neat bracket style annecdotes)"
"649": "Do different bitwise operators differ in performance? (And other performance musings)"
"858": "How much bit-fiddling do you do on real code?"
"877": "Will you be writing your own allocator?"
"883": "More talk about showing vars in binary in Visual Studio"
"930": "Can you show us how to open a blank window using the WinAPI?"
"944": "What do you think of RAII? (Musings on robustness and error handling)"
"1252": "Do you think a four-year CS degree is a waste of money?"
"1260": "Are you going to use structs instead of classes?"
"1267": "How will you handle polymorphism? (Rant against inheritance, instead promoting mixins)"
"1377": "Will the game be in C++ or C? If the latter, why all the .cpp files?"
"1427": "What are the differenceslocation: "day1qa"
number: "1qa"
title: "Intro to C on Windows - Day 1 Q&A"
markers:
"27.000": "How many videos do you think you'll do before you actually start coding the game?"
"95.000": "What libraries do you plan to use in the game development?"
"108.000": "What about Emacs + MinGW?"
"136.000": "What's the 'A' in OutputDebugString?"
"414.000": "How often will you do these videos?"
"441.000": "Will you use OpenGL or DirectX for the game?"
"508.000": "Is this the same Visual Studio setup you use for The Witness?"
"548.000": "Are you going to use Windows?"
"601.000": "Can you see the debug output in a command prompt?"
"691.000": "How much Windows-specific stuff will be required for the game?"
"789.000": "Will you post a list of these videos on a website or blog?"
"932.000": "Why are you doing this project?"
"1086.000": "Will you still do the podcasts?"
"1126.000": "Please make the font larger"
---
location: "day3"
number: "3"
title: "Intro to C on Windows - Day 3"
markers:
"76.000": "Today: Memory"
"158.000": "Programming = Modifying Memory"
"295.000": "Recap of our program"
"345.000": "Brief note on the compiler warnings"
"395.000": "Okay: Where are the bits?"
"485.000": "Pointers. C lets you talk about memory."
"595.000": "The syntax of Pointers: * and &"
"721.000": "Memory addresses, Virtual Memory"
"911.000": "How Virtual Memory Works"
"1059.000": "The consequences of Virtual Memory"
"1120.000": "Looking at pointers in the watch window"
"1264.000": "The memory window"
"1333.000": "Changing memory manually via the debugger"
"1414.000": "C: the power of no protection"
"1463.000": "A caveat: can't touch memory you don't own yet"
"1527.000": "Getting close to the metal is awesome"
"1576.000": "Where did this initial memory come from?"
"1615.000": "The Stack"
"1691.000": "Why the stack makes sense (calls and returns)"
"1871.000": "Let's watch the stack go"
"2012.000": "Debug mode memory cruft"
"2177.000": "Memory moving around (Stack randomization / ASLR)"
"2299.000": "Everything we'll do is about touching memory"
"2318.000": "Memory control = super powers"
"2344.000": "Where code is in memory [n.b. watch the q&a to see this work]"
"2517.000": "Pictures!"
"2567.000": "Making the trailer"
"2625.000": "Centimeters matter to CPUs (thanks, speed of light!)"
"3035.000": "Why it's important to know that"
"3096.000": "Applying the same idea to PCIe"
"3160.000": "Latency vs. Throughput/Bandwidth"
"3369.000": "The Cache"
"3651.000": "The cache miss, and the horror of... the swap!"
"3787.000": "One more time, today's moral: everything we do is poking memory"
---
location: "day3qa"
number: "3qa"
title: "Intro to C on Windows - Day 3 Q&A"
markers:
"20.000": "They teach nothing of this in many colleges. How do you feel about the new programming workforce?"
"218.000": "Someone asking Casey to play Density"
"228.000": "Suggestion on how to evaluate and see results in VS Memory Window"
"316.000": "Do any schools get this right?"
"363.000": "What languages do you use for metaprogramming C?"
"369.000": "Another suggestion regarding use of VS"
"508.000": "How useful is it to study cache-oblivious data structures?"
"669.000": "How do you meet experts?"
"854.000": "Will we see some use of linear algebra?"
"965.000": "Are we replacing STL with our own structures?"
"973.000": "Will there be network programming as part of the game?"
"1057.000": "How do you feel about Rust?"
"1061.000": "Do you plan on reviving the Molly Rocket forum for this project?"
"1078.000": "What do you think about programming in C using a CLI-based OS?"
"1125.000": "Another comment regarding cache-oblivious algorithms/data structures"
"1208.000": "A comment regarding a Reddit question"
"1225.000": "Are you uploading your streams to Youtube?"
"1255.000": "Singing (?)"
"1261.000": "What's the general plan for drawing graphics to the screen?"
"1280.000": "Will you be trying to do game design?"
"1300.000": "Suggestion on what to name Youtube channel"
"1308.000": "Will you explain the properties of an API design?"
"1311.000": "Closing remarks"
---
location: "day4"
number: "4"
title: "Intro to C on Windows - Day 4"
markers:
"0.000": "Intro, welcome, and correction"
"319.000": "Show code bytes in the debugger"
"388.000": "Asside on processor architecture philosphies"
"633.000": "Looking at memory in more detail"
"646.000": "Casting, endianness, and memory"
"908.000": "Ascii art of binary"
"1180.000": "The concept and history of endianness"
"1335.000": "Why programmers care about endianness"
"1666.000": "Intro to structs"
"1976.000": "Compiler struct padding"
"2045.000": "What sizeof() does"
"2128.000": "Structure compactness"
"2340.000": "Understanding the hexadecimal numbering system"
"2651.000": "How casting works"
"2765.000": "Static typed languages"
"3105.000": "Turning off the damned edit and continue! Bad edit and continue"
"3198.000": "Back to how casting works"
"3260.000": "Why is garbage memory always 204?"
"3461.000": "Array basics"
"3553.000": "CaseyQuick: Inline variable assignment"
"4003.000": "Array syntax is complete shorthand (demo)"
"4184.000": "Explanation of array syntax demo"
"4496.000": "Arrow vs. dot notation"
"4623.000": "Closing thoughts"
---
 between references (int &v) and pointers (int *v)?"
"1519": "Will the code be backwards compatible with C?"
"1552": "Short Circuiting"
"1700": "More on entry points (main vs WinMain), how programs are init'd [n.b. Code::Blocks is an IDE]"
"1978": "How big is the community? What are your preorder stats?"
"2055": "Will you show how to look for i-cache misses in the main stream?"
"2131": "Do you use a lot of advanced algorithms? Do you worry about Big O?"
"2148": "The DuckHorse question (Muses on duck trustworthiness, Rants against horses)"
"2215": "What OS is your PC?"
"2223": "Did you talk about pass by val / pass by ref yet?"
"2245": "Do you have an opinion on Data-oriented design?"
"2266": "Talks about Stack Overflows"
"2299": "Are you going to use OpenGL / DirectX?"
"2320": "More talk about showing binary in VS."
"2336": "Can I follow along in Linux?"
"2382": "Will * do << instead if it's faster? (Bit about Strength Reduction)"
"2442": "Will the allocator be lock-free / thread-safe?"
"2491": "How much dependency injection do you use?"
"2516": "Do you feel the same about using RAII for public APIs?"
"2538": "Why are you using struct{} instead of class{}?"
"2649": "Explanation of Mixins"
"2757": "Other operators (Comma, goto)"
"2808": "How do I get the art and music for the game?"
"2823": "Do you use goto ever in C?"
"2832": "Are you Ben Cousins?"
"2842": "Will be showing the creation of any tools (e.g. level editor)"
"2866": "Have you ever made anything for the demoscene? Know anyone who has?"
"2931": "Why don't you use a platform-independent library?"
"2940": "What is the general plan for making the game?"
"2979": "Drink Suggestions. Fractals? (No.) Dependency Injection Joke."
"3012": "Can a struct have a constructor? (More struct==class rant, Positivity musings)"
"3111": "Will the game include old-school passwords for saving?"
"3125": "What about Game Design? (best ways to prototype, how to learn it vs. this stream)"
"3206": "How much money do game devs make? (General career and skills musings)"
"3327": "Will the source downloads be under version control?"
"3353": "Trolls exist"
"3363": "What's your current day job?"
"3368": "More pay discussion (how location, company factor in)"
"3421": "More on RAII"
"3445": "Will you use any libraries to make the game?"
"3504": "What's your life story? How did you learn programming? How'd you get an internship at MS?"
"3531": "Early years, Programming with Dad (who worked at DEC)"
"3598": "Learned 3D math out of Foley and van Dam [n.b. this is how Carmack learned 3D too]"
"3706": "Getting the Microsoft Internship (Luck, and the right kind of skill)"
"3982": "The Internship - Old MS Culture, Blowups"
"4187": "The Internship - Casey's job at MS"
"4349": "The Internship - Microsoft Money"
"4493": "The Internship - Getting lucky again, because he couldn't cook or rent a car"
"4898": "The Internship - Meeting Chris Hecker and the WinG group"
"5085": "Starting out in Games - Chris Hecker and Friends"
"5151": "Starting out in Games - Learning to Program For Real (RAD)"
"5277": "Leaving RAD - Trying (and Failing) at Game Design"
"5354": "Present Day - More Game Tech (Larabee, Bink 2, Moustache, The Witness)"
---
location: "day5"
number: "5"
title: "Intro to C on Windows - Day 5"
markers:
"4.000": "Where does everything live? First: The Code"
"156.000": "From Code to Executable to Memory"
"564.000": "Virtual Memory and Paging"
"975.000": "The Instruction Cache"
"1174.000": "Where the Stack lives (and what lives in the stack)"
"1436.000": "Operators (starting with math)"
"1600.000": "Precedence"
"1771.000": "Shift operator"
"2135.000": "Shifting to multiply/divide"
"2295.000": "Bitwise Operator Intro, Google interlude"
"2534.000": "Bitwise OR and AND Operators, Bitmasking"
"2800.000": "Bitwise NOT"
"2881.000": "Windows Calculator - Programming mode is handy"
"2947.000": "Bitwise XOR"
"3209.000": "Logic / Comparison Operators Intro, Truthy values"
"3415.000": "Comparison Operators"
"3597.000": "Don't expect truthy values made by '<' and friends to always be 1"
"3662.000": "Control Flow Intro"
"3715.000": "If/Else Statements"
"4043.000": "Logical AND and OR"
"4191.000": "Advice about one-line if statements"
"4313.000": "Logical XOR is just !="
"4423.000": "Loops Intro"
"4465.000": "while(){}"
"4575.000": "Breaking out of loops"
"4658.000": "Loop styles are equivalent, as they're all just made of ifs and gotos"
"4682.000": "do {} while();"
"4779.000": "for(){}"
"4990.000": "Writing a for() in terms of while()"
"5142.000": "switch(){}"
"5508.000": "Blocks {}"
"5667.000": "Block advice - watch the lifespan of pointers to block-local vars"
"5890.000": "Dereference Operator"
"6011.000": "Pointers to Pointers"
"6072.000": "Pointers and the Struct's Arrow Operator"
"6108.000": "Shadowing variables with new scopes"
---
location: "day5qa"
number: "5qa"
title: "Intro to C on Windows - Day 5 Q&A"
markers:
"36.000": "At some point, Casey might do a real multi-week intro to C for non-programmers"
"106.000": "Have you ever found a use for bitfields?"
"152.000": ",b lets you see binary in Watch window of Visual Studio [n.b. this is in newest version only]"
"197.000": "More clarification on Virtual Memory (is page table itself virtual?)"
"326.000": "Clarification on where the stack lives, and on the CPU's i-cache and d-cache"
"396.000": "Clarification on undefined behavior (casting structs from day 4 of C stream)"
"471.000": "Can you make the OS load all of your code into memory at once instead of mapping the file?"
"550.000": "Is the C Runtime Library different from the C Standard Library?"
"585.000": "Why do you prefer K&R style brackets? (and other neat bracket style annecdotes)"
"649.000": "Do different bitwise operators differ in performance? (And other performance musings)"
"858.000": "How much bit-fiddling do you do on real code?"
"877.000": "Will you be writing your own allocator?"
"883.000": "More talk about showing vars in binary in Visual Studio"
"930.000": "Can you show us how to open a blank window using the WinAPI?"
"944.000": "What do you think of RAII? (Musings on robustness and error handling)"
"1252.000": "Do you think a four-year CS degree is a waste of money?"
"1260.000": "Are you going to use structs instead of classes?"
"1267.000": "How will you handle polymorphism? (Rant against inheritance, instead promoting mixins)"
"1377.000": "Will the game be in C++ or C? If the latter, why all the .cpp files?"
"1427.000": "What are the differences between references (int &v) and pointers (int *v)?"
"1519.000": "Will the code be backwards compatible with C?"
"1552.000": "Short Circuiting"
"1700.000": "More on entry points (main vs WinMain), how programs are init'd [n.b. Code::Blocks is an IDE]"
"1978.000": "How big is the community? What are your preorder stats?"
"2055.000": "Will you show how to look for i-cache misses in the main stream?"
"2131.000": "Do you use a lot of advanced algorithms? Do you worry about Big O?"
"2148.000": "The DuckHorse question (Muses on duck trustworthiness, Rants against horses)"
"2215.000": "What OS is your PC?"
"2223.000": "Did you talk about pass by val / pass by ref yet?"
"2245.000": "Do you have an opinion on Data-oriented design?"
"2266.000": "Talks about Stack Overflows"
"2299.000": "Are you going to use OpenGL / DirectX?"
"2320.000": "More talk about showing binary in VS."
"2336.000": "Can I follow along in Linux?"
"2382.000": "Will * do << instead if it's faster? (Bit about Strength Reduction)"
"2442.000": "Will the allocator be lock-free / thread-safe?"
"2491.000": "How much dependency injection do you use?"
"2516.000": "Do you feel the same about using RAII for public APIs?"
"2538.000": "Why are you using struct{} instead of class{}?"
"2649.000": "Explanation of Mixins"
"2757.000": "Other operators (Comma, goto)"
"2808.000": "How do I get the art and music for the game?"
"2823.000": "Do you use goto ever in C?"
"2832.000": "Are you Ben Cousins?"
"2842.000": "Will be showing the creation of any tools (e.g. level editor)"
"2866.000": "Have you ever made anything for the demoscene? Know anyone who has?"
"2931.000": "Why don't you use a platform-independent library?"
"2940.000": "What is the general plan for making the game?"
"2979.000": "Drink Suggestions. Fractals? (No.) Dependency Injection Joke."
"3012.000": "Can a struct have a constructor? (More struct==class rant, Positivity musings)"
"3111.000": "Will the game include old-school passwords for saving?"
"3125.000": "What about Game Design? (best ways to prototype, how to learn it vs. this stream)"
"3206.000": "How much money do game devs make? (General career and skills musings)"
"3327.000": "Will the source downloads be under version control?"
"3353.000": "Trolls exist"
"3363.000": "What's your current day job?"
"3368.000": "More pay discussion (how location, company factor in)"
"3421.000": "More on RAII"
"3445.000": "Will you use any libraries to make the game?"
"3504.000": "What's your life story? How did you learn programming? How'd you get an internship at MS?"
"3531.000": "Early years, Programming with Dad (who worked at DEC)"
"3598.000": "Learned 3D math out of Foley and van Dam [n.b. this is how Carmack learned 3D too]"
"3706.000": "Getting the Microsoft Internship (Luck, and the right kind of skill)"
"3982.000": "The Internship - Old MS Culture, Blowups"
"4187.000": "The Internship - Casey's job at MS"
"4349.000": "The Internship - Microsoft Money"
"4493.000": "The Internship - Getting lucky again, because he couldn't cook or rent a car"
"4898.000": "The Internship - Meeting Chris Hecker and the WinG group"
"5085.000": "Starting out in Games - Chris Hecker and Friends"
"5151.000": "Starting out in Games - Learning to Program For Real (RAD)"
"5277.000": "Leaving RAD - Trying (and Failing) at Game Design"
"5354.000": "Present Day - More Game Tech (Larabee, Bink 2, Moustache, The Witness)"
---
